<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    Controller的组件扫描  -->
    <context:component-scan base-package="com.gutaicheng.controller"/>
    <!-- 开启注解 一定要放在其他转换器之前-->
    <mvc:annotation-driven />

<!--&lt;!&ndash;    配置处理器映射器&ndash;&gt;-->
<!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
<!--        <property name="messageConverters">-->
<!--            <list>-->
<!--                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

    <!--自定义消息转换器的编码,解决后台传输json回前台时，中文乱码问题-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" >
                <property name = "supportedMediaTypes">
                    <list>
                        <value>application/json;charset=utf-8</value>
                        <value>text/html;charset=utf-8</value>
                        <!-- application 可以在任意 form 表单里面 enctype 属性默认找到 -->
                        <value>application/x-www-form-urlencoded</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 注册格式转换器 -->
    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService2">
        <property name="formatters">
            <set>
                <bean class="com.gutaicheng.controller.MyFormatter"/>
            </set>
        </property>
    </bean>
    <mvc:annotation-driven conversion-service="conversionService2"/>

<!--    配置文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="5400000"/>
        <property name="maxInMemorySize" value="40960"/>
        <property name="resolveLazily" value="true"/>
    </bean>

<!--    配置拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/write"/>
            <bean class="com.gutaicheng.util.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
<!--    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
<!--        <property name="fileEncodings" value="utf-8"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash; 注册校验器 &ndash;&gt;-->
<!--    <bean id="validator"  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
<!--        &lt;!&ndash; hibernate校验器&ndash;&gt;-->
<!--        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />-->
<!--        &lt;!&ndash; 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties &ndash;&gt;-->
<!--        <property name="validationMessageSource" ref="messageSource" />-->
<!--    </bean>-->
<!--    &lt;!&ndash; 开启spring的Valid功能 &ndash;&gt;-->
<!--    <mvc:annotation-driven  validator="validator"/>-->
<!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="viewResolver">-->
<!--        <property name="prefix" value="Blog"/>-->
<!--    </bean>-->
</beans>